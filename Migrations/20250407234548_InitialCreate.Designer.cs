// <auto-generated />
using System;
using DeMaria.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeMaria.Migrations
{
    [DbContext(typeof(CartorioContext))]
    [Migration("20250407234548_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeMaria.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfMae")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("CpfPai")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataNascimentoMae")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataNascimentoPai")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NomeMae")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NomePai")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("DeMaria.Models.RegistroCasamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Conjuge1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Conjuge2Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCasamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Conjuge1Id");

                    b.HasIndex("Conjuge2Id");

                    b.ToTable("RegistrosCasamento");
                });

            modelBuilder.Entity("DeMaria.Models.RegistroNascimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RegistradoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RegistradoId");

                    b.ToTable("RegistrosNascimento");
                });

            modelBuilder.Entity("DeMaria.Models.RegistroObito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataObito")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FalecidoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FalecidoId");

                    b.ToTable("RegistrosObito");
                });

            modelBuilder.Entity("DeMaria.Models.RegistroCasamento", b =>
                {
                    b.HasOne("DeMaria.Models.Pessoa", "Conjuge1")
                        .WithMany()
                        .HasForeignKey("Conjuge1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DeMaria.Models.Pessoa", "Conjuge2")
                        .WithMany()
                        .HasForeignKey("Conjuge2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Conjuge1");

                    b.Navigation("Conjuge2");
                });

            modelBuilder.Entity("DeMaria.Models.RegistroNascimento", b =>
                {
                    b.HasOne("DeMaria.Models.Pessoa", "Registrado")
                        .WithMany()
                        .HasForeignKey("RegistradoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Registrado");
                });

            modelBuilder.Entity("DeMaria.Models.RegistroObito", b =>
                {
                    b.HasOne("DeMaria.Models.Pessoa", "Falecido")
                        .WithMany()
                        .HasForeignKey("FalecidoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Falecido");
                });
#pragma warning restore 612, 618
        }
    }
}
